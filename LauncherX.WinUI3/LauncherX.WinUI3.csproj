<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net6.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>LauncherX.WinUI3</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;arm64</Platforms>
    <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
    <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
    <WindowsPackageType>None</WindowsPackageType>
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <AssemblyName>LauncherX</AssemblyName>
    <ApplicationIcon>Assets\icon.ico</ApplicationIcon>
    <PlatformTarget>x64</PlatformTarget>
    <Description>LauncherX - Create and organise collections of files, folders, and websites</Description>
    <Copyright>Copyright © 2020-present ClickPhase</Copyright>
    <PackageProjectUrl>clickphase.vercel.app/launcherx</PackageProjectUrl>
    <PackageIcon>icon.png</PackageIcon>
    <AssemblyVersion>2.0.0</AssemblyVersion>
    <FileVersion>2.0.0</FileVersion>
    <Company>ClickPhase</Company>
    <Authors>LauncherX</Authors>
    <Product>LauncherX</Product>
    <PackageId>LauncherX</PackageId>
    <Version>2.0.0</Version>
  </PropertyGroup>
  <ItemGroup>
    <Content Remove="Assets\icon.png" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="CreateCollectionDialogContent.xaml" />
    <None Remove="Frames\CreateCollectionDialogContent.xaml" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.1.2" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.1" />
    <PackageReference Include="SettingsUI" Version="2.1.4" />
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
       Tools extension to be activated for this project even if the Windows App SDK Nuget
       package has not yet been restored -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnablePreviewMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <None Update="Assets\icon.ico">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="Assets\icon.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Frames\CreateCollectionDialogContent.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
</Project>
